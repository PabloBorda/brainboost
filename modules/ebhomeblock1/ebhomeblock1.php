	<?php
/**
*  2007-2014 PrestaShop
*  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*  DISCLAIMER
*  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*  @author PrestaShop SA <contact@prestashop.com>

*  @copyright    2007-2014 PrestaShop SA

*  @license   http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)

*  International Registered Trademark & Property of PrestaShop SA

*  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*  ELATION ADVANCE TOUCH THEME
*  (d) elation3ase theme development
*  (c) 2015 Elation Base, LLC
*  (i) elationbase.com | elationbase@gmail.com
*  See theme's licence agreement at the theme root folder (licence.txt)
*  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*  (i) Do not edit this file if you wish to upgrade PrestaShop or this Theme to newer versions in the future. 
*  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*/
if (!defined('_PS_VERSION_'))
	exit;

class EBHomeBlock1 extends Module
{
	public function __construct()
	{
		$this->name = 'ebhomeblock1';
		$this->tab = 'front_office_features';
		$this->version = 2.0;
		$this->author = 'Elation Base';
		$this->need_instance = 0;

		$this->bootstrap = true;
		parent::__construct();

		$this->displayName = $this->l('Homepage Promo block #1');
		$this->description = $this->l('Displays parallax scrolling block in the homepage.');
	}

	public function install()
	{
		$languages = Language::getLanguages(false);
		$values = array();
		$values['EBHOMEBLOCK1_OPTION'] = '0';
		$values['EBHOMEBLOCK1_HEIGHT'] = '0';
		$values['EBHOMEBLOCK1_LINK'] = '0';

		foreach ($languages as $lang)
		{
			$values['EBHOMEBLOCK1_IMG'][$lang['id_lang']] = '';
			$values['EBHOMEBLOCK1_BG'][$lang['id_lang']] = '#444';
			$values['EBHOMEBLOCK1_DESC'][$lang['id_lang']] = '';
			$values['EBHOMEBLOCK1_TXT'][$lang['id_lang']] = 'Read More';
			$values['EBHOMEBLOCK1_URL'][$lang['id_lang']] = 'http://elationbase.com/';
		}

		Configuration::updateValue('EBHOMEBLOCK1_OPTION', $values['EBHOMEBLOCK1_OPTION']);
		Configuration::updateValue('EBHOMEBLOCK1_IMG', $values['EBHOMEBLOCK1_IMG']);
		Configuration::updateValue('EBHOMEBLOCK1_BG', $values['EBHOMEBLOCK1_BG']);
		Configuration::updateValue('EBHOMEBLOCK1_DESC', $values['EBHOMEBLOCK1_DESC']);
		Configuration::updateValue('EBHOMEBLOCK1_TXT', $values['EBHOMEBLOCK1_TXT']);
		Configuration::updateValue('EBHOMEBLOCK1_URL', $values['EBHOMEBLOCK1_URL']);

		return parent::install() && $this->registerHook('displayHome') && $this->registerHook('displayHeader');
	}

	public function uninstall()
	{
		Configuration::deleteByName('EBHOMEBLOCK1_HEIGHT');
		Configuration::deleteByName('EBHOMEBLOCK1_OPTION');
		Configuration::deleteByName('EBHOMEBLOCK1_LINK');
		Configuration::deleteByName('EBHOMEBLOCK1_IMG');
		Configuration::deleteByName('EBHOMEBLOCK1_BG');
		Configuration::deleteByName('EBHOMEBLOCK1_DESC');
		Configuration::deleteByName('EBHOMEBLOCK1_TXT');
		Configuration::deleteByName('EBHOMEBLOCK1_URL');
		return parent::uninstall();
	}

	public function hookDisplayHome()
	{
		if (!$this->isCached('ebhomeblock1.tpl', $this->getCacheId()))
		{
			$imgname = Configuration::get('EBHOMEBLOCK1_IMG', $this->context->language->id);

			if ($imgname && file_exists(_PS_MODULE_DIR_.$this->name.DIRECTORY_SEPARATOR.'img'.DIRECTORY_SEPARATOR.$imgname))
				$this->smarty->assign('banner_img', $this->context->link->protocol_content.Tools::getMediaServer($imgname).$this->_path.'img/'.$imgname);

			$this->smarty->assign(array(
				'background_height' => Configuration::get('EBHOMEBLOCK1_HEIGHT'),
				'background_option' => Configuration::get('EBHOMEBLOCK1_OPTION'),
				'background_link' => Configuration::get('EBHOMEBLOCK1_LINK'),
				'background_color' => Configuration::get('EBHOMEBLOCK1_BG', $this->context->language->id),
				'banner_desc' => Configuration::get('EBHOMEBLOCK1_DESC', $this->context->language->id),
				'banner_txt' => Configuration::get('EBHOMEBLOCK1_TXT', $this->context->language->id),
				'banner_url' => Configuration::get('EBHOMEBLOCK1_URL', $this->context->language->id)
			));
		}

		return $this->display(__FILE__, 'ebhomeblock1.tpl', $this->getCacheId());
	}

	public function postProcess()
	{
		if (Tools::isSubmit('submitStoreConf'))
		{
			$languages = Language::getLanguages(false);
			$values = array();
			$update_images_values = false;

			$values['EBHOMEBLOCK1_HEIGHT'] = Tools::getValue('EBHOMEBLOCK1_HEIGHT');
			$values['EBHOMEBLOCK1_OPTION'] = Tools::getValue('EBHOMEBLOCK1_OPTION');
			$values['EBHOMEBLOCK1_LINK'] = Tools::getValue('EBHOMEBLOCK1_LINK');
			
			foreach ($languages as $lang)
			{
				if (isset($_FILES['EBHOMEBLOCK1_IMG_'.$lang['id_lang']])
					&& isset($_FILES['EBHOMEBLOCK1_IMG_'.$lang['id_lang']]['tmp_name'])
					&& !empty($_FILES['EBHOMEBLOCK1_IMG_'.$lang['id_lang']]['tmp_name']))
				{
					if ($error = ImageManager::validateUpload($_FILES['EBHOMEBLOCK1_IMG_'.$lang['id_lang']], 4000000))
						return $this->displayError($this->l('Invalid image'));
					else
					{
						$ext = Tools::substr($_FILES['EBHOMEBLOCK1_IMG_'.$lang['id_lang']]['name'], strrpos($_FILES['EBHOMEBLOCK1_IMG_'.$lang['id_lang']]['name'], '.') + 1);
						$file_name = md5($_FILES['EBHOMEBLOCK1_IMG_'.$lang['id_lang']]['name']).'.'.$ext;

						if (!move_uploaded_file($_FILES['EBHOMEBLOCK1_IMG_'.$lang['id_lang']]['tmp_name'], dirname(__FILE__).DIRECTORY_SEPARATOR.'img'.DIRECTORY_SEPARATOR.$file_name))
							return $this->displayError($this->l('An error occurred while attempting to upload the file.'));
						else
						{
							if (Configuration::hasContext('EBHOMEBLOCK1_IMG', $lang['id_lang'], Shop::getContext())
								&& Configuration::get('EBHOMEBLOCK1_IMG', $lang['id_lang']) != $file_name)
								@unlink(dirname(__FILE__).DIRECTORY_SEPARATOR.'img'.DIRECTORY_SEPARATOR.Configuration::get('EBHOMEBLOCK1_IMG', $lang['id_lang']));

							$values['EBHOMEBLOCK1_IMG'][$lang['id_lang']] = $file_name;
						}
					}

					$update_images_values = true;
				}
				$values['EBHOMEBLOCK1_BG'][$lang['id_lang']] = Tools::getValue('EBHOMEBLOCK1_BG_'.$lang['id_lang']);
				$values['EBHOMEBLOCK1_DESC'][$lang['id_lang']] = Tools::getValue('EBHOMEBLOCK1_DESC_'.$lang['id_lang']);
				$values['EBHOMEBLOCK1_TXT'][$lang['id_lang']] = Tools::getValue('EBHOMEBLOCK1_TXT_'.$lang['id_lang']);
				$values['EBHOMEBLOCK1_URL'][$lang['id_lang']] = Tools::getValue('EBHOMEBLOCK1_URL_'.$lang['id_lang']);
			}

			if ($update_images_values)
				Configuration::updateValue('EBHOMEBLOCK1_IMG', $values['EBHOMEBLOCK1_IMG']);

			Configuration::updateValue('EBHOMEBLOCK1_HEIGHT', $values['EBHOMEBLOCK1_HEIGHT']);
			Configuration::updateValue('EBHOMEBLOCK1_OPTION', $values['EBHOMEBLOCK1_OPTION']);
			Configuration::updateValue('EBHOMEBLOCK1_LINK', $values['EBHOMEBLOCK1_LINK']);
			Configuration::updateValue('EBHOMEBLOCK1_BG', $values['EBHOMEBLOCK1_BG']);
			Configuration::updateValue('EBHOMEBLOCK1_DESC', $values['EBHOMEBLOCK1_DESC']);
			Configuration::updateValue('EBHOMEBLOCK1_TXT', $values['EBHOMEBLOCK1_TXT']);
			Configuration::updateValue('EBHOMEBLOCK1_URL', $values['EBHOMEBLOCK1_URL']);

			$this->_clearCache('ebhomeblock1.tpl');
			return $this->displayConfirmation($this->l('The settings have been updated.'));
		}
		return '';
	}

	public function getContent()
	{
		return $this->postProcess().$this->renderForm();
	}
	
	public function renderForm()
	{
		$fields_form = array(
			'form' => array(
				'legend' => array(
					'title' => $this->l('Settings'),
					'icon' => 'icon-cogs'
				),
				'input' => array(
					array(
						'type'	 => 'radio',
						'label' => $this->l('Block Height'),
						'desc' => $this->l('Half screen or full screen height block height'),
						'name' => 'EBHOMEBLOCK1_HEIGHT',
						'is_bool'=> true,
						'values' => array(
							array(
								'value'	=> 0,
								'label' => $this->l('Half screen block height'),
								'id' => 'half'
							),
							array(
								'value'	=> 1,
								'label' => $this->l('Full screen block height'),
								'id' => 'full'
							)
						)
					),
					array(
						'type'	 => 'radio',
						'label' => $this->l('Background Option'),
						'desc' => $this->l('You can either add a background image or a background color.'),
						'name' => 'EBHOMEBLOCK1_OPTION',
						'is_bool'=> true,
						'values' => array(
							array(
								'value'	=> 0,
								'label' => $this->l('Background Image'),
								'id' => 'image'
							),
							array(
								'value'	=> 1,
								'label' => $this->l('Background Color'),
								'id' => 'color'
							)
						)
					),
					array(
						'type' => 'file_lang',
						'label' => $this->l('Block image'),
						'name' => 'EBHOMEBLOCK1_IMG',
						'lang' => true,
					),
					array(
						'type' => 'text',
						'lang' => true,
						'label' => $this->l('Block background color'),
						'name' => 'EBHOMEBLOCK1_BG',
						'desc' => $this->l('Use HEX color ( http://www.w3schools.com/tags/ref_colorpicker.asp ).'),
						'id' => 'background_option_color'
					),
					array(
						'type' => 'textarea',
						'lang' => true,
						'label' => $this->l('Block text'),
						'name' => 'EBHOMEBLOCK1_DESC',
						//'autoload_rte' => true,
						'desc' => $this->l('Enter text for the block.')
					),
					array(
						'type'	 => 'switch',
						'label' => $this->l('Add buttom & Link'),
						'name' => 'EBHOMEBLOCK1_LINK',
						'values' => array(
							array(
								'value'	=> 1,
								'label' => $this->l('No'),
								'id' => 'no'
							),
							array(
								'value'	=> 0,
								'label' => $this->l('Yes'),
								'id' => 'yes'
							)
						)
					),
					
					
					
					
					array(
						'type' => 'text',
						'lang' => true,
						'label' => $this->l('Buttom text'),
						'name' => 'EBHOMEBLOCK1_TXT',
						//'autoload_rte' => true,
						'desc' => $this->l('Enter text for the buttom.')
					),
					array(
						'type' => 'text',
						'lang' => true,
						'label' => $this->l('Buttom URL'),
						'name' => 'EBHOMEBLOCK1_URL',
						//'autoload_rte' => true,
						'desc' => $this->l('Enter url link.')
					)
				),
				'submit' => array(
					'title' => $this->l('Save')
				)
			),
		);

		$helper = new HelperForm();
		$helper->show_toolbar = false;
		$helper->table = $this->table;
		$lang = new Language((int)Configuration::get('PS_LANG_DEFAULT'));
		$helper->default_form_language = $lang->id;
		$helper->module = $this;
		$helper->allow_employee_form_lang = Configuration::get('PS_BO_ALLOW_EMPLOYEE_FORM_LANG') ? Configuration::get('PS_BO_ALLOW_EMPLOYEE_FORM_LANG') : 0;
		$helper->identifier = $this->identifier;
		$helper->submit_action = 'submitStoreConf';
		$helper->currentIndex = $this->context->link->getAdminLink('AdminModules', false).'&configure='.$this->name.'&tab_module='.$this->tab.'&module_name='.$this->name;
		$helper->token = Tools::getAdminTokenLite('AdminModules');
		$helper->tpl_vars = array(
			'uri' => $this->getPathUri(),
			'fields_value' => $this->getConfigFieldsValues(),
			'languages' => $this->context->controller->getLanguages(),
			'id_language' => $this->context->language->id
		);
		$output = $helper->generateForm(array($fields_form));
		$output .= '<link rel="stylesheet" href="../modules/'.$this->name.'/js/spectrum.css" />';
		$output .= '<script type="text/javascript" src="../modules/'.$this->name.'/js/spectrum.js"></script>';
		$output .= '<script type="text/javascript" src="../modules/'.$this->name.'/js/functions.js"></script>';
		return $output;
	}
	
	public function getConfigFieldsValues()
	{
		$languages = Language::getLanguages(false);
		$fields = array();

		$fields['EBHOMEBLOCK1_HEIGHT'] = Tools::getValue('EBHOMEBLOCK1_HEIGHT', Configuration::get('EBHOMEBLOCK1_HEIGHT'));
		$fields['EBHOMEBLOCK1_OPTION'] = Tools::getValue('EBHOMEBLOCK1_OPTION', Configuration::get('EBHOMEBLOCK1_OPTION'));
		$fields['EBHOMEBLOCK1_LINK'] = Tools::getValue('EBHOMEBLOCK1_LINK', Configuration::get('EBHOMEBLOCK1_LINK'));
		
		foreach ($languages as $lang)
		{
			$fields['EBHOMEBLOCK1_IMG'][$lang['id_lang']] = Tools::getValue('EBHOMEBLOCK1_IMG_'.$lang['id_lang'], Configuration::get('EBHOMEBLOCK1_IMG', $lang['id_lang']));
			$fields['EBHOMEBLOCK1_BG'][$lang['id_lang']] = Tools::getValue('EBHOMEBLOCK1_BG_'.$lang['id_lang'], Configuration::get('EBHOMEBLOCK1_BG', $lang['id_lang']));
			$fields['EBHOMEBLOCK1_DESC'][$lang['id_lang']] = Tools::getValue('EBHOMEBLOCK1_DESC_'.(int)$lang['id_lang'], Configuration::get('EBHOMEBLOCK1_DESC', $lang['id_lang']));
			$fields['EBHOMEBLOCK1_TXT'][$lang['id_lang']] = Tools::getValue('EBHOMEBLOCK1_TXT'.(int)$lang['id_lang'], Configuration::get('EBHOMEBLOCK1_TXT', $lang['id_lang']));
			$fields['EBHOMEBLOCK1_URL'][$lang['id_lang']] = Tools::getValue('EBHOMEBLOCK1_URL'.(int)$lang['id_lang'], Configuration::get('EBHOMEBLOCK1_URL', $lang['id_lang']));
		}

		return $fields;
	}
}
